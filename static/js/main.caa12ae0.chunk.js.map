{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","lenghts","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","name","aboutText","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oMAKe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAOJ,uBAAMF,UAAU,cAAhB,UACE,uBAAOA,UAAU,oBAAoBI,KAAK,SAASE,YAAY,SAAS,aAAW,WACnF,wBAAQN,UAAU,kBAAkBI,KAAK,SAAzC,uBAEF,sBAAKJ,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACA,uBAAOD,UAAU,mBAAoBO,QAASR,EAAMS,WAAYJ,KAAK,WAAWK,KAAK,SAASJ,GAAG,2BACjG,uBAAOL,UAAU,mBAAmBU,QAAQ,yBAA5C,wCC1BG,SAASC,EAASZ,GAC7B,IAwBA,EAAwBa,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACI,qCACJ,sBAAKd,UAAU,YAAYe,MAAO,CAACC,MAAmB,SAAbjB,EAAME,KAAc,QAAQ,SAArE,UACI,6BAAKF,EAAMkB,UACnB,qBAAKjB,UAAU,OAAf,SAEI,0BAAUA,UAAU,eAAekB,MAAOL,EAAMM,SAdxB,SAACC,GAEjBN,EAAQM,EAAMC,OAAOH,QAY6CH,MAAO,CAACO,gBAA6B,SAAbvB,EAAME,KAAc,OAAO,QAAQe,MAAmB,SAAbjB,EAAME,KAAc,QAAQ,SAAWI,GAAG,QAAQkB,KAAK,QAEhM,wBAAQvB,UAAU,uBAAuBO,QAlCrB,WAElB,IAAIiB,EAAUX,EAAKY,cACnBX,EAAQU,GACRzB,EAAM2B,UAAU,0BAA0B,YA8B5C,kCACA,wBAAQ1B,UAAU,uBAAuBO,QAvBrB,WAEjB,IAAIiB,EAAUX,EAAKc,cACnBb,EAAQU,GACRzB,EAAM2B,UAAU,0BAA0B,YAmB7C,kCACA,wBAAQ1B,UAAU,uBAAuBO,QA9BnB,WAEnBO,EADe,IAEff,EAAM2B,UAAU,gBAAgB,YA2BnC,0BAGF,sBAAK1B,UAAU,iBAAiBe,MAAO,CAACC,MAAmB,SAAbjB,EAAME,KAAc,QAAQ,SAA1E,UACC,mDACA,8BAAIY,EAAKe,MAAM,KAAKC,OAApB,WAAoChB,EAAKgB,OAAzC,gBACA,8BAAI,KAAQhB,EAAKe,MAAM,KAAKC,OAA5B,kBACA,yCACA,4BAAIhB,EAAKiB,QAAQ,EAAEjB,EAAK,mEC9Cd,SAASkB,EAAMhC,GAK1B,OACCA,EAAMiC,OAAS,sBAAKhC,UAAS,sBAAiBD,EAAMiC,MAAM5B,KAA7B,gCAAiEK,KAAK,QAApF,UACZ,iCANe,SAACwB,GAChB,IAAMC,EAAQD,EAAKN,cACnB,OAAOO,EAAMC,OAAO,GAAGV,cAAgBS,EAAME,MAAM,GAI1CC,CAAWtC,EAAMiC,MAAM5B,QADpB,KACsCL,EAAMiC,MAAMM,OFiCrExC,EAAOyC,aAAe,CACfC,KAAM,iBACNC,UAAW,SGwBJC,MAvDf,WACC,MAAwB9B,mBAAS,SAAjC,mBAAOX,EAAP,KAAa0C,EAAb,KACD,EAAyB/B,mBAAS,MAAlC,mBAAOoB,EAAP,KAAaY,EAAb,KAEMlB,EAAY,SAACmB,EAASzC,GACxBwC,EAAS,CACPN,IAAKO,EACLzC,KAAMA,IAER0C,YAAW,WACTF,EAAS,QACR,OAoBL,OACA,qCAEF,cAAC9C,EAAD,CAAQK,MAAM,YAAYF,KAAMA,EAAOO,WAnBpB,WACL,UAATP,GACD0C,EAAQ,QACRI,SAASC,KAAKjC,MAAMO,gBAAkB,OACtCI,EAAU,6BAA8B,WACxCqB,SAAS5C,MAAO,0BAIjBwC,EAAQ,SACRI,SAASC,KAAKjC,MAAMO,gBAAkB,QACtCI,EAAU,8BAA+B,WACzCqB,SAAS5C,MAAO,6BAQnB,cAAC4B,EAAD,CAAOC,MAASA,IAEhB,qBAAKhC,UAAU,iBAAf,SAOa,cAACW,EAAD,CAAUe,UAAWA,EAAWT,QAAS,kCAAkChB,KAAMA,UC7C/EgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASc,eAAe,SAM1BZ,K","file":"static/js/main.caa12ae0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n             {/* } <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/About\">{props.aboutText}</Link>\r\n              </li>\r\n               */}\r\n            </ul>\r\n            <form className=\"d-flex mx-3\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-warning\" type=\"submit\">Search</button>\r\n            </form>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\"  onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired,\r\n    }\r\n\r\n Navbar.defaultProps = {\r\n        name: 'Set title here',\r\n        aboutText: 'About'\r\n    };","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n       // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase!\",\"success\")\r\n    }\r\n    const handleClearText = ()=>{\r\n         let newText = ('');\r\n         setText(newText)\r\n         props.showAlert(\"Text Cleared!\",\"success\")\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n         let newText = text.toLowerCase();\r\n         setText(newText)\r\n         props.showAlert(\"Converted to Lowercase!\",\"success\")\r\n    }\r\n     const handleOnChange = (event)=>{\r\n           // console.log(\"On Change\");\r\n            setText(event.target.value);\r\n           \r\n        }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n    \r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}}  id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n      <button className=\"btn btn-warning mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-warning mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n      <button className=\"btn btn-warning mx-2\" onClick={handleClearText}>ClearText</button>\r\n    </div>\r\n\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n     <h2>Your text summary</h2>\r\n     <p>{text.split(\" \").length} words, {text.length}characters</p>\r\n     <p>{0.008 * text.split(\" \").length}Minutes read</p>\r\n     <h2>Preview</h2>\r\n     <p>{text.lenghts>0?text:\"Enter somethingh in the textbox above to preview it here\"}</p>\r\n</div>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return ( \r\n     props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//  import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n//import {\n//  BrowserRouter as Router,\n//  Switch,\n//  Route,\n//} from \"react-router-dom\";\n\n\nfunction App() {\n const [mode, setMode] = useState('light');\nconst [alert,setAlert] = useState(null)\n\nconst showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type \n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n}\n\n\nconst toggleMode = ()=>{\n  if(mode === 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor = 'grey';\n    showAlert(\"Dark mode has been enabled\", \"success\")\n    document.title= 'TextUtils - Dark Mode';\n\n  }\n  else{\n   setMode('light');\n   document.body.style.backgroundColor = 'white';\n   showAlert(\"Light mode has been enabled\", \"success\")\n   document.title= 'TextUtils - Light Mode';\n  }\n}\n\n  return (\n  <>\n  {/*<Router>*/}\n<Navbar title=\"TextUtils\" mode={mode}  toggleMode={toggleMode} />\n<Alert alert = {alert} />\n{/*} <Navbar title=\"TextUtils\" mode={mode} aboutText=\"About\" toggleMode={toggleMode}/> */}\n<div className=\"container my-3\">\n\n{/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n           </Route>\n<Route exact path=\"/\"> */}\n           { <TextForm showAlert={showAlert} heading= \"Enter the text to analyze below\" mode={mode} />}\n         {/*} </Route>\n       </Switch> */}\n        \n        </div>\n        {/* </Router>*/}\n\n </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}